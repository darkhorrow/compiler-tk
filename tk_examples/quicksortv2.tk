
// Variable global
int[] vector = [8, 1, 9, 6, 5, 7, 2, 4, 3, 0]

/*
 Ordena array mediante el m√©todo quicksort
*/
def int[] sort(int[] array, int low, int high) {
	if(low < high) {
		int pi = partition(array, low, high)

		sort(array, low, pi-1)
		sort(array, pi+1, high)
	}
}

def int partition (int[] array, int low, int high) {
    int pivot = array[high]

    int i = (low - 1)

    for (int j = low; j <= high-1; j++) {
        if (arr[j] < pivot) {
            i++
            int temp = array[i]
			array[j] = array[i]
			array[i] = temp
        }
    }
    int temp = array[i + 1]
	  array[i+1] = array[high]
    array[high] = temp
    return (i + 1)
}

def int main() {
  int tam = size(vector)

  int [] ordenado = sort(vector, 0, tam-1)

  // Array no ordenado
  println("Array no ordenado : ")
  for e in vector {
    print(e + ',')
  }

  // Array ordenado
  println('\n' + "Array ordenado : ")
  int i = 0
  while(i <= tam) {
    print(array[i])
  }

  return 0
}
